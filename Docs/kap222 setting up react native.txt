

## 1. Set Up React Native Development Environment

### 1.1 Install Node.js and npm

React Native requires Node.js. Install it from the official [Node.js website](https://nodejs.org/).

### 1.2 Install React Native CLI

Once you have Node.js and npm installed, you can install the React Native CLI:


npm install -g react-native-cli


### 1.3 Set Up Android and iOS development environments

Follow the React Native's official [Getting Started guide](https://reactnative.dev/docs/getting-started) to set up the necessary tools for Android and/or iOS development.

## 2. Install VS Code

If you haven't installed VS Code, get it from the official [VS Code website](https://code.visualstudio.com/).

## 3. Install Essential Extensions

### 3.1 React Native Tools

This is a VS Code extension that provides a development environment for React Native projects. Install it by searching for "React Native Tools" in the Extensions view (`Ctrl + Shift + X`).

### 3.2 Prettier

Prettier is an opinionated code formatter. It supports many languages, including JavaScript and TypeScript. Install it by searching for "Prettier" in the Extensions view.

## 4. Start a New React Native Project

Open a terminal or command prompt and run:


react-native init YourProjectName


## 5. Open Project in VS Code

Navigate to the directory of your newly created project:


cd YourProjectName


And then, start VS Code in that directory:

code .

## 6. Debugging in VS Code

With the React Native Tools extension, you can debug your React Native projects directly from VS Code. Here's how:

1. Open your project in VS Code.
2. Go to the Run view (`Ctrl + Shift + D`).
3. In the debug configuration dropdown, choose "Add Configuration" and select "React Native".
4. Set up the configurations as needed. By default, it will give you configurations for debugging Android and iOS.
5. Start your React Native project (e.g., `react-native run-android` or `react-native run-ios`).
6. In VS Code, choose the appropriate debug configuration and click the "Start Debugging" button.

## 7. Using IntelliSense

VS Code's IntelliSense for React Native will automatically work once you have the necessary extensions installed. This will provide you with auto-completions, type information, and inline documentation while coding.

